// automatically generated by Xtext
grammar de.fraunhofer.ipa.componentInterface.ComponentInterface with org.eclipse.xtext.common.Terminals

import "http://www.example.org/componentInterface" 
import "http://www.example.org/ros" as ros
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

ComponentInterface returns ComponentInterface:
	'ComponentInterface'
	'{'
		('name' name=EString)?
		('namespace' namespace=Namespace)?
		('RosTopicPublisher' '{' RosTopicPublisher+=RosPublisher ( "," RosTopicPublisher+=RosPublisher)* '}' )?
		('RosTopicSubscriber' '{' RosTopicSubscriber+=RosSubscriber ( "," RosTopicSubscriber+=RosSubscriber)* '}' )?
		('RosServiceServer' '{' RosServiceServer+=RosServiceServer ( "," RosServiceServer+=RosServiceServer)* '}' )?
		('RosServiceClient' '{' RosServiceClient+=RosServiceClient ( "," RosServiceClient+=RosServiceClient)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

Namespace returns ros::Namespace:
	GlobalNamespace | RelativeNamespace_Impl | PrivateNamespace;

GraphName returns ros::GraphName:
	'GraphName' /* TODO: implement this rule and an appropriate IValueConverter */;

GlobalNamespace returns ros::GlobalNamespace:
	{ros::GlobalNamespace}
	'GlobalNamespace'
	'{'
		('parts' '{' parts+=EString ( "," parts+=EString)* '}' )?
	'}';

RelativeNamespace_Impl returns ros::RelativeNamespace:
	{ros::RelativeNamespace}
	'RelativeNamespace'
	'{'
		('parts' '{' parts+=EString ( "," parts+=EString)* '}' )?
	'}';

PrivateNamespace returns ros::PrivateNamespace:
	{ros::PrivateNamespace}
	'PrivateNamespace'
	'{'
		('parts' '{' parts+=EString ( "," parts+=EString)* '}' )?
	'}';
	
RosPublisher returns RosPublisher:
	{RosPublisher}
	'Publisher'
	'{'
		('TopicName' TopicName=EString)?
		('TopicRef' TopicRef=[ros::Publisher|EString])?
		('NameSpace' NameSpace=EString)?
	'}';

RosSubscriber returns RosSubscriber:
	{RosSubscriber}
	'Subscriber'
	'{'
		('TopicName' TopicName=EString)?
		('TopicRef' TopicRef=[ros::Subscriber|EString])?
		('NameSpace' NameSpace=EString)?
	'}';

RosServiceServer returns RosServiceServer:
	{RosServiceServer}
	'ServiceServer'
	'{'
		('ServiceName' ServiceName=EString)?
		('SrvRef' SrvRef=[ros::ServiceServer|EString])?
		('NameSpace' NameSpace=EString)?
	'}';

RosServiceClient returns RosServiceClient:
	{RosServiceClient}
	'ServiceServer'
	'{'
		('ServiceName' ServiceName=EString)?
		('SrvRef' SrvRef=[ros::ServiceClient|EString])?
		('NameSpace' NameSpace=EString)?
	'}';