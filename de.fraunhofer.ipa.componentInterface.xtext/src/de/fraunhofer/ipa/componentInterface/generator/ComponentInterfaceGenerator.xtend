/*
 * generated by Xtext 2.13.0
 */
package de.fraunhofer.ipa.componentInterface.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import componentInterface.ComponentInterface


/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class ComponentInterfaceGenerator extends AbstractGenerator {

 	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (componentinterface : resource.allContents.toIterable.filter(ComponentInterface)){
				fsa.generateFile(componentinterface.name+".rosinterfacespool",componentinterface.compile)
				}
			}
		
	def compile (ComponentInterface componentinterface)
	'''
RosInterfacesPool {
	«FOR pub:componentinterface.rospublisher»
	RosPublisher «checkname(pub.name)» { topicName "«pub.name»" type "«pub.publisher.message.package.name».«pub.publisher.message.name»" }
	«ENDFOR»
	«FOR sub:componentinterface.rossubscriber»
	RosSubscriber «checkname(sub.name)» { topicName "«sub.name»" type "«sub.subscriber.message.package.name».«sub.subscriber.message.name»" }
	«ENDFOR»
	«FOR srvserver:componentinterface.rosserviceserver»
	RosSrvServer «checkname(srvserver.name)» { srvName "«srvserver.name»" type "«srvserver.srvserver.service.package.name».«srvserver.srvserver.service.name»" }
	«ENDFOR»
	«FOR srvclient:componentinterface.rosserviceclient»
	RosSrvClient «checkname(srvclient.name)» { srvName "«srvclient.name»" type "«srvclient.srvclient.service.name».«srvclient.srvclient.name»" }
	«ENDFOR»
}
	'''


def String checkname(String name){
	if (name.contains("/"))
		return name.replace("/","_")
	else
		return name
}	
}
