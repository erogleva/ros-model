/*
 * generated by Xtext 2.12.0
 */
package de.fraunhofer.ipa.ros.formatting2

import com.google.inject.Inject
import de.fraunhofer.ipa.ros.services.RosArtifactGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import ros.ActionClient
import ros.ActionServer
import ros.Artifact
import ros.Node
import ros.Parameter
import ros.Publisher
import ros.ServiceClient
import ros.ServiceServer
import ros.Subscriber

class RosArtifactFormatter extends AbstractFormatter2 {
	
	@Inject extension RosArtifactGrammarAccess

	def dispatch void format(Artifact artifact, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		artifact.getNode.format;
	}

	def dispatch void format(Node node, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (ServiceServer serviceServer : node.getServiceserver()) {
			serviceServer.format;
		}
		for (Publisher publisher : node.getPublisher()) {
			publisher.format;
		}
		for (Subscriber subscriber : node.getSubscriber()) {
			subscriber.format;
		}
		for (ServiceClient serviceClient : node.getServiceclient()) {
			serviceClient.format;
		}
		for (ActionServer actionServer : node.getActionserver()) {
			actionServer.format;
		}
		for (ActionClient actionClient : node.getActionclient()) {
			actionClient.format;
		}
		for (Parameter parameter : node.getParameter()) {
			parameter.format;
		}
	}
	
	// TODO: implement for ServiceServer, Publisher, Subscriber, ServiceClient, ActionServer, ActionClient, Parameter, ParameterListType, ParameterStructType, ParameterIntegerType, ParameterStringType, ParameterDoubleType, ParameterDateType, ParameterBooleanType, ParameterBase64Type, ParameterAnyType, ParameterArrayType, ParameterSequence, ParameterStruct, ParameterStructMember, ParameterStructTypeMember
}
