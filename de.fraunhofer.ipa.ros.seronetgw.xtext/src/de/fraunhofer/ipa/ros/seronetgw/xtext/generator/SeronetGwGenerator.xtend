/*
 * generated by Xtext 2.12.0
 */
package de.fraunhofer.ipa.ros.seronetgw.xtext.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import de.fraunhofer.ipa.ros.seronetgw.rosgw.RosGateway

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SeronetGwGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (node : resource.allContents.toIterable.filter(RosGateway)){
			fsa.generateFile("gateway.rosartifact",node.compile)
			}
		}
	
	def CharSequence compile(RosGateway gateway)'''
Artifact artifact_name { node Node { name gateway_node 
	«FOR pub : gateway.rosTopicSubscriber»
	publisher {
		Publisher { name «pub.name» message "«pub.message.package.name».«pub.message.name»" } }
    «ENDFOR»
	«FOR sub : gateway.rosTopicPublisher»
	subscriber {
		Subscriber { name «sub.name» message "«sub.message.package.name».«sub.message.name»" } }
    «ENDFOR»
	«FOR srvc : gateway.rosServiceServer»
	serviceclient {
		ServiceClient { name «srvc.name» service "«srvc.service.package.name».«srvc.service.name»" } }
    «ENDFOR»
	«FOR srvs : gateway.rosServiceClient»
	serviceserver {
		ServiceServer { name «srvs.name» service "«srvs.service.package.name».«srvs.service.name»" } }
    «ENDFOR»
}}
	'''
	
	
}