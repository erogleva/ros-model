/**
 * generated by Xtext 2.12.0
 */
package de.fraunhofer.ipa.ros.seronetgw.xtext.generator;

import com.google.common.collect.Iterables;
import de.fraunhofer.ipa.ros.seronetgw.rosgw.RosGateway;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import ros.Subscriber;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class SeronetGwGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    Iterable<RosGateway> _filter = Iterables.<RosGateway>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), RosGateway.class);
    for (final RosGateway node : _filter) {
      fsa.generateFile("gateway.rosartifact", this.compile(node));
    }
  }
  
  public CharSequence compile(final RosGateway gateway) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Artifact hola { node Node { name Gateway_node ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("publisher {");
    _builder.newLine();
    {
      EList<Subscriber> _rosTopicSubscriber = gateway.getRosTopicSubscriber();
      for(final Subscriber pub : _rosTopicSubscriber) {
        _builder.append("\t");
        _builder.append("Publisher { name ");
        String _name = pub.getName();
        _builder.append(_name, "\t");
        _builder.append(" message \"");
        String _name_1 = pub.getMessage().getPackage().getName();
        _builder.append(_name_1, "\t");
        _builder.append(".");
        String _name_2 = pub.getMessage().getName();
        _builder.append(_name_2, "\t");
        _builder.append("\" }");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("}}}");
    _builder.newLine();
    return _builder;
  }
}
